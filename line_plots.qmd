---
title: "line_plots"
format: html
editor: visual
---

### Import libraries

```{r}
library(tidyverse)
library(here)
library(purrr)

```

### Read in files, use a for loop to assign csv files to their named dataframes

```{r}

#setwd("csv_files") 
fs <- list.files()

amino_acids <- str_remove(fs, ".csv") 
#read in all csv files in csv_files folder
dfs <- lapply(fs, read_csv) 

## assign .csv filenames to their corresponding dataframe
names(dfs) <- amino_acids; list2env(dfs, envir = .GlobalEnv) 

```

### Clean data - remove unneeded columns

```{r}

## removing unused columns across the list
cleaned <- lapply(dfs, function(x) x |> select_if(~ any(.x == c("Affinity (tot)", "pH", "Temperature"))) |> 
                    select(1,3,4) |> 
                    rename(temp = 1, affinity = 2, ph = 3) |> 
                    mutate(keep = if_else((is.na(affinity) & is.na(ph)), FALSE, TRUE)) |> 
                    filter(across(everything(), 
                                  ~ !str_detect(., 
                                               c('Affinity (tot)', 'Temperature', 'pH')))) |> 
                    filter(keep == TRUE) |> 
                    slice(2:85) |> 
                    mutate(across(where(is.character), as.double)) |> 
                    select(temp, affinity, ph))
## Saving the names back to their variable assignments
names(cleaned) <- amino_acids; list2env(cleaned, envir = .GlobalEnv) 

```

```{r}
# Slice through cleaned by index to get our 4 different conditions as a list of dataframes
deep_8 <- lapply(cleaned, function(x) x |> 
                   slice(1:42))
deep_11 <- lapply(cleaned, function(x) x |> 
                    slice(43:84))

deep_8_highc_highh <- lapply(cleaned, function(x) x |> slice(1:21))
deep_8_lowc_lowh <- lapply(cleaned, function(x) x |> slice(22:42))
deep_11_highc_highh <- lapply(cleaned, function(x) x |> slice(43:63))
deep_11_lowc_lowh <- lapply(cleaned, function(x) x |> slice(64:84))

```

```{r}
# Start plotting!



lapply(deep_8, function(x) x |> 
         ggplot(aes(x = ph, y = affinity)) + geom_line())

```
